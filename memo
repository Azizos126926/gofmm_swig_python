This is a memo to document what I did for my master thesis on a daily
basis. It not only includes the stuff that I successfully implemented,
but also the problems that I encountered. Moreover, it will also contain
the discussion with my advisor and though process.

I hope this file could guide me to a clear goal of our project.


15.12.2020
Modified set_env.sh, CMakeLists.txt and wrote a new swig.sh to add a
linker file with liblapack, libblas libraries in the run time.

Figured out seg fault problem in call_Launchhelper(). We must initialize
a separate memeory block in runtime


16.12.2020

Reading day!

Read format in .i file about swig: %include, %inline, global var...,
static linking, extern


17.12.2020

Designed basic working case: first start with the implementation of
running dense matrix

wrote functions: SPDMATRIX_DENSE, launchhelper_denseSPD

problem encountered: see the issue in gitlab with the title 

        Cant read the binary matrix file from .sh


18.12.2020

Solved the issue from 17.12.2020 (see solution in gitlab)

modified tools.i file so that SPDMATRIX_DENSE function is callable in python


20.12.2020
1. rewrote launchhelper_denseSPD so that it could take as an parameter
a file path to the parameters file. It runs succesfully

2. Modified the constructor of gofmm::CommandLineHelper so that it can
take a vector as a parameter. This proves much cleaner and understandble
since we can avoid realloc (and general memory management) which typically happens when
we want to read file into char**

3. wrote file_to_argv: which reads a file into vector. Due to memory
issue related to local vars, this function is still under construction.

4. wrote `compile_log.txt`: document what the output of key cmds in the
compilitaion should look like. The other users of the gofmm + hmlp package
should consult it.


